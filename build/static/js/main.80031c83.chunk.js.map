{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","Notification","message","useEffect","noteService","initialNotes","notesToShow","filter","Footer","style","color","fontStyle","fontSize","map","i","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","Math","random","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"4LAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACI,qBAAIC,UAAU,OAAd,UACKJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,QCP1CK,EAAU,aAiBD,EAfA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAahC,EAVA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQhC,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAACC,GAAD,OAAcA,EAASC,SCqGhCK,EA/GH,WACR,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,0BAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEMC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAGJ,qBAAKxB,UAAU,QAAf,SAAwBwB,KAGnCC,qBAAU,WACNC,IAAqBpB,MAAK,SAACqB,GACvBX,EAASW,QAEd,IAGH,IA0CMC,EAAcT,EACdJ,EACAA,EAAMc,QAAO,SAACjC,GAAD,OAA6B,IAAnBA,EAAKG,aAE5B+B,EAAS,WAMX,OACI,sBAAKC,MANW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACI,uBACA,2GAQZ,OACI,gCACI,uCACA,cAACX,EAAD,CAAcC,QAASH,IACvB,8BACI,yBAAQnB,QAAS,kBAAMkB,GAAYD,IAAnC,kBACUA,EAAU,YAAc,WAGtC,6BACKS,EAAYO,KAAI,SAACvC,EAAMwC,GAAP,OACb,cAAC,EAAD,CAEIxC,KAAMA,EACNC,iBAAkB,kBA1DX,SAACc,GACf,sCAAkCA,GAA3C,IACMf,EAAOmB,EAAMsB,MAAK,SAACC,GAAD,OAAOA,EAAE3B,KAAOA,KAClC4B,EAAW,2BAAQ3C,GAAR,IAAcG,WAAYH,EAAKG,YAEhD2B,EACYa,GACPjC,MAAK,SAACkC,GACHxB,EACID,EAAMoB,KAAI,SAACvC,GAAD,OAAWA,EAAKe,KAAOA,EAAKf,EAAO4C,SAGpDC,OAAM,SAACC,GACJpB,EAAgB,SAAD,OACF1B,EAAKK,QADH,sCAGf0C,YAAW,WACPrB,EAAgB,QACjB,KACHN,EAASD,EAAMc,QAAO,SAACS,GAAD,OAAOA,EAAE3B,KAAOA,SAuCNiC,CAAmBhD,EAAKe,MAF3CyB,QAMjB,uBAAMS,SAjFE,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAa,CACf/C,QAASgB,EACTgC,KAAM,IAAIC,KACVnD,UAAWoD,KAAKC,SAAW,IAG/B1B,EAAmBsB,GAAY1C,MAAK,SAACkC,GACjCxB,EAASD,EAAMsC,OAAOb,IACtBtB,EAAW,QAuEX,UACI,uBAAOoC,MAAOrC,EAASsC,SApEV,SAACT,GACtBU,QAAQC,IAAIX,EAAMY,OAAOJ,OACzBpC,EAAW4B,EAAMY,OAAOJ,UAmEhB,wBAAQK,KAAK,SAAb,qBAEJ,cAAC7B,EAAD,Q,MC3GZ8B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.80031c83.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important ? \"make not important\" : \"make important\";\r\n\r\n    return (\r\n        <li className=\"note\">\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Note;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update };\r\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\n\nconst App = () => {\n    const [notes, setNotes] = useState([]);\n    const [newNote, setNewNote] = useState(\"\");\n    const [showAll, setShowAll] = useState(true);\n    const [errorMessage, setErrorMessage] = useState(\"some error happened...\");\n\n    const Notification = ({ message }) => {\n        if (message === null) {\n            return null;\n        }\n\n        return <div className=\"error\">{message}</div>;\n    };\n\n    useEffect(() => {\n        noteService.getAll().then((initialNotes) => {\n            setNotes(initialNotes);\n        });\n    }, []);\n    // console.log(\"render\", notes.length, \"notes\");\n\n    const addNote = (event) => {\n        event.preventDefault();\n        const noteObject = {\n            content: newNote,\n            date: new Date(),\n            important: Math.random() > 0.5,\n        };\n\n        noteService.create(noteObject).then((returnedNote) => {\n            setNotes(notes.concat(returnedNote));\n            setNewNote(\"\");\n        });\n    };\n\n    const handleNoteChange = (event) => {\n        console.log(event.target.value);\n        setNewNote(event.target.value);\n    };\n\n    const toggleImportanceOf = (id) => {\n        const url = `http://localhost:3001/notes/${id}`;\n        const note = notes.find((n) => n.id === id);\n        const changedNote = { ...note, important: !note.important };\n\n        noteService\n            .update(changedNote)\n            .then((returnedNote) => {\n                setNotes(\n                    notes.map((note) => (note.id !== id ? note : returnedNote))\n                );\n            })\n            .catch((error) => {\n                setErrorMessage(\n                    `Note '${note.content}' was already removed from server`\n                );\n                setTimeout(() => {\n                    setErrorMessage(null);\n                }, 5000);\n                setNotes(notes.filter((n) => n.id !== id));\n            });\n    };\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter((note) => note.important === true);\n\n    const Footer = () => {\n        const footerStyle = {\n            color: \"green\",\n            fontStyle: \"italic\",\n            fontSize: 16,\n        };\n        return (\n            <div style={footerStyle}>\n                <br />\n                <em>\n                    Note app, Department of Computer Science, University of\n                    Helsinki 2021\n                </em>\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <Notification message={errorMessage} />\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? \"important\" : \"all\"}\n                </button>\n            </div>\n            <ul>\n                {notesToShow.map((note, i) => (\n                    <Note\n                        key={i}\n                        note={note}\n                        toggleImportance={() => toggleImportanceOf(note.id)}\n                    />\n                ))}\n            </ul>\n            <form onSubmit={addNote}>\n                <input value={newNote} onChange={handleNoteChange} />\n                <button type=\"submit\">save</button>\n            </form>\n            <Footer />\n        </div>\n    );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}